{"version":3,"file":"static/js/167.c46aee80.chunk.js","mappings":"2OAEO,MAAMA,EAAkBC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sGAO3BC,EAAeJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4EAMxBI,EAAgBP,EAAAA,GAAOQ,EAACC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mDAKxBO,EAAmBV,EAAAA,GAAOW,IAAGC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,oE,aCT1C,MA8CA,EA9CgBU,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAkBvC,OAhBAG,EAAAA,EAAAA,YAAU,KACkBC,WACxB,IACEF,GAAW,GACX,MAAMG,QAAuBC,EAAAA,EAAAA,IAAaV,GAC1CG,EAAWM,EACb,CAAE,MAAOE,GACPC,QAAQD,MAAMA,EAChB,CAAC,QACCL,GAAW,EACb,GAGFO,EAAmB,GAClB,CAACb,KAGFc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGX,IAAWY,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACC,IAAnBhB,EAAQiB,QACPL,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,+BAA8BJ,SAAC,YAAa,KAC1DC,EAAAA,EAAAA,KAAA,MAAAD,SACGd,EAAQmB,KAAIC,IACXR,EAAAA,EAAAA,MAAC7B,EAAe,CAAA+B,SAAA,CACb,KACDF,EAAAA,EAAAA,MAACxB,EAAY,CAAA0B,SAAA,CAAC,WAASM,EAAOC,UAAuB,KACrDN,EAAAA,EAAAA,KAACxB,EAAa,CAAAuB,SAAEM,EAAOE,UAAyB,MAH5BF,EAAOG,YASnCR,EAAAA,EAAAA,KAACrB,EAAgB,CAAAoB,SAAC,+CAInB,C,mFCnDPU,EAAAA,EAAMC,SAASC,QAAU,gCAEzB,MAAMC,EAAU,mCAEHC,EAAgBtB,gBACJkB,EAAAA,EAAMK,IAAI,8BAADC,OAA+BH,KAC/CI,KAAKC,QAGVC,EAAuB3B,gBACXkB,EAAAA,EAAMK,IAAI,wBAADC,OACNH,EAAO,qDAAAG,OAAoDI,KAErEH,KAAKC,QAGVG,EAAoB7B,gBACRkB,EAAAA,EAAMK,IAAI,SAADC,OACrBhC,EAAO,aAAAgC,OAAYH,EAAO,qBAErBI,KAGLK,EAAc9B,gBACFkB,EAAAA,EAAMK,IAAI,SAADC,OACrBhC,EAAO,qBAAAgC,OAAoBH,EAAO,qBAE7BI,KAAKM,KAGV7B,EAAeF,gBACHkB,EAAAA,EAAMK,IAAI,SAADC,OACrBhC,EAAO,qBAAAgC,OAAoBH,EAAO,4BAE7BI,KAAKC,O","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/tmbdApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewContainer = styled.li`\n  margin-bottom: 20px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n\nexport const ReviewAuthor = styled.h2`\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const ReviewContent = styled.p`\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const NoReviewsMessage = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n  color: #666;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviews } from 'services/tmbdApi';\nimport Loader from 'components/Loader/Loader';\nimport {\n  ReviewContainer,\n  ReviewAuthor,\n  ReviewContent,\n  NoReviewsMessage,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        setLoading(true);\n        const fetchedReviews = await fetchReviews(movieId);\n        setReviews(fetchedReviews);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews.length !== 0 ? (\n        <div>\n          <h2 className=\"text-2xl pb-4 font-bold pt-4\">Reviews</h2>{' '}\n          <ul>\n            {reviews.map(review => (\n              <ReviewContainer key={review.id}>\n                {' '}\n                <ReviewAuthor>Author: {review.author}</ReviewAuthor>{' '}\n                <ReviewContent>{review.content}</ReviewContent>{' '}\n              </ReviewContainer>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <NoReviewsMessage>\n          We don't have any reviews for this movie\n        </NoReviewsMessage>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '3d7efa62fc27fcb6f07d7d25afd35619';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["ReviewContainer","styled","li","_templateObject","_taggedTemplateLiteral","ReviewAuthor","h2","_templateObject2","ReviewContent","p","_templateObject3","NoReviewsMessage","div","_templateObject4","Reviews","movieId","useParams","reviews","setReviews","useState","loading","setLoading","useEffect","async","fetchedReviews","fetchReviews","error","console","fetchMovieReviews","_jsxs","_Fragment","children","_jsx","Loader","length","className","map","review","author","content","id","axios","defaults","baseURL","API_KEY","fetchTrending","get","concat","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","fetchActors","cast"],"sourceRoot":""}